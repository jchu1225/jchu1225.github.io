while(actual_nums[choice]!=i){
n<-n+1
choice<-rand_choice[n]
}
return(n)
}
trial_dumb_sequence <- function(i){
n<-1
seq_choice <- c(seq(i,n_actors,1),seq(1,i,1)) ##sequence
choice<-seq_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-seq_choice[n]
}
return(n)
}
list_trial<-NULL
for(nmc in 1:2000){
actual_nums <- sample(1:length(actor_seq))
for(i in 1:n_actors){
if(trial_dumb_sequence(i)>round(0.5*n_actors)){
list_trial<-append(list_trial,0)
break
}
if(i==n_actors){
list_trial<-append(list_trial,1)
}
}
}
mean(list_trial)
rm(list = ls())
n_actors <- 10
actor_seq <- seq(1,n_actors,1)
trial_best <- function(i){
n<-1
choice<-i
while(actual_nums[choice]!=i){
choice<-actual_nums[choice]
n<-n+1
}
return(n-1)
}
trial_naive <- function(i){
n<-1
rand_choice <- sample(1:n_actors) ##random choice
choice<-rand_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-rand_choice[n]
}
return(n)
}
trial_dumb_sequence <- function(i){
n<-1
seq_choice <- c(seq(i,n_actors,1),seq(1,i,1)) ##sequence
choice<-seq_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-seq_choice[n]
}
return(n)
}
list_trial<-NULL
for(nmc in 1:2000){
actual_nums <- sample(1:length(actor_seq))
for(i in 1:n_actors){
if(trial_dumb_sequence(i)>round(0.5*n_actors)){
list_trial<-append(list_trial,0)
break
}
if(i==n_actors){
list_trial<-append(list_trial,1)
}
}
}
mean(list_trial)
rm(list = ls())
n_actors <- 10
actor_seq <- seq(1,n_actors,1)
trial_best <- function(i){
n<-1
choice<-i
while(actual_nums[choice]!=i){
choice<-actual_nums[choice]
n<-n+1
}
return(n-1)
}
trial_naive <- function(i){
n<-1
rand_choice <- sample(1:n_actors) ##random choice
choice<-rand_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-rand_choice[n]
}
return(n)
}
trial_dumb_sequence <- function(i){
n<-1
seq_choice <- c(seq(i,n_actors,1),seq(1,i,1)) ##sequence
choice<-seq_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-seq_choice[n]
}
return(n)
}
list_trial<-NULL
for(nmc in 1:2000){
actual_nums <- sample(1:length(actor_seq))
for(i in 1:n_actors){
if(trial_dumb_sequence(i)>round(0.5*n_actors)){
list_trial<-append(list_trial,0)
break
}
if(i==n_actors){
list_trial<-append(list_trial,1)
}
}
}
mean(list_trial)
rm(list = ls())
n_actors <- 10
actor_seq <- seq(1,n_actors,1)
trial_best <- function(i){
n<-1
choice<-i
while(actual_nums[choice]!=i){
choice<-actual_nums[choice]
n<-n+1
}
return(n-1)
}
trial_naive <- function(i){
n<-1
rand_choice <- sample(1:n_actors) ##random choice
choice<-rand_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-rand_choice[n]
}
return(n)
}
trial_dumb_sequence <- function(i){
n<-1
seq_choice <- c(seq(i,n_actors,1),seq(1,i,1)) ##sequence
choice<-seq_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-seq_choice[n]
}
return(n)
}
list_trial<-NULL
for(nmc in 1:2000){
actual_nums <- sample(1:length(actor_seq))
for(i in 1:n_actors){
if(trial_dumb_sequence(i)>round(0.5*n_actors)){
list_trial<-append(list_trial,0)
break
}
if(i==n_actors){
list_trial<-append(list_trial,1)
}
}
}
mean(list_trial)
rm(list = ls())
n_actors <- 10
actor_seq <- seq(1,n_actors,1)
trial_best <- function(i){
n<-1
choice<-i
while(actual_nums[choice]!=i){
choice<-actual_nums[choice]
n<-n+1
}
return(n-1)
}
trial_naive <- function(i){
n<-1
rand_choice <- sample(1:n_actors) ##random choice
choice<-rand_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-rand_choice[n]
}
return(n)
}
trial_dumb_sequence <- function(i){
n<-1
seq_choice <- c(seq(i,n_actors,1),seq(1,i,1)) ##sequence
choice<-seq_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-seq_choice[n]
}
return(n)
}
list_trial<-NULL
for(nmc in 1:2000){
actual_nums <- sample(1:length(actor_seq))
for(i in 1:n_actors){
if(trial_best(i)>round(0.5*n_actors)){
list_trial<-append(list_trial,0)
break
}
if(i==n_actors){
list_trial<-append(list_trial,1)
}
}
}
mean(list_trial)
rm(list = ls())
n_actors <- 10
actor_seq <- seq(1,n_actors,1)
trial_best <- function(i){
n<-1
choice<-i
while(actual_nums[choice]!=i){
choice<-actual_nums[choice]
n<-n+1
}
return(n-1)
}
trial_naive <- function(i){
n<-1
rand_choice <- sample(1:n_actors) ##random choice
choice<-rand_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-rand_choice[n]
}
return(n)
}
trial_dumb_sequence <- function(i){
n<-1
seq_choice <- c(seq(i,n_actors,1),seq(1,i,1)) ##sequence
choice<-seq_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-seq_choice[n]
}
return(n)
}
list_trial<-NULL
for(nmc in 1:2000){
actual_nums <- sample(1:length(actor_seq))
for(i in 1:n_actors){
if(trial_best(i)>round(0.5*n_actors)){
list_trial<-append(list_trial,0)
break
}
if(i==n_actors){
list_trial<-append(list_trial,1)
}
}
}
mean(list_trial)
rm(list = ls())
n_actors <- 10
actor_seq <- seq(1,n_actors,1)
trial_best <- function(i){
n<-1
choice<-i
while(actual_nums[choice]!=i){
choice<-actual_nums[choice]
n<-n+1
}
return(n-1)
}
trial_naive <- function(i){
n<-1
rand_choice <- sample(1:n_actors) ##random choice
choice<-rand_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-rand_choice[n]
}
return(n)
}
trial_dumb_sequence <- function(i){
n<-1
seq_choice <- c(seq(i,n_actors,1),seq(1,i,1)) ##sequence
choice<-seq_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-seq_choice[n]
}
return(n)
}
list_trial<-NULL
for(nmc in 1:2000){
actual_nums <- sample(1:length(actor_seq))
for(i in 1:n_actors){
if(trial_best(i)>round(0.5*n_actors)){
list_trial<-append(list_trial,0)
break
}
if(i==n_actors){
list_trial<-append(list_trial,1)
}
}
}
mean(list_trial)
rm(list = ls())
n_actors <- 10
actor_seq <- seq(1,n_actors,1)
trial_best <- function(i){
n<-1
choice<-i
while(actual_nums[choice]!=i){
choice<-actual_nums[choice]
n<-n+1
}
return(n-1)
}
trial_naive <- function(i){
n<-1
rand_choice <- sample(1:n_actors) ##random choice
choice<-rand_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-rand_choice[n]
}
return(n)
}
trial_dumb_sequence <- function(i){
n<-1
seq_choice <- c(seq(i,n_actors,1),seq(1,i,1)) ##sequence
choice<-seq_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-seq_choice[n]
}
return(n)
}
list_trial<-NULL
for(nmc in 1:2000){
actual_nums <- sample(1:length(actor_seq))
for(i in 1:n_actors){
if(trial_best(i)>round(0.5*n_actors)){
list_trial<-append(list_trial,0)
break
}
if(i==n_actors){
list_trial<-append(list_trial,1)
}
}
}
mean(list_trial)
rm(list = ls())
n_actors <- 10
actor_seq <- seq(1,n_actors,1)
trial_best <- function(i){
n<-1
choice<-i
while(actual_nums[choice]!=i){
choice<-actual_nums[choice]
n<-n+1
}
return(n-1)
}
trial_naive <- function(i){
n<-1
rand_choice <- sample(1:n_actors) ##random choice
choice<-rand_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-rand_choice[n]
}
return(n)
}
trial_dumb_sequence <- function(i){
n<-1
seq_choice <- c(seq(i,n_actors,1),seq(1,i,1)) ##sequence
choice<-seq_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-seq_choice[n]
}
return(n)
}
list_trial<-NULL
for(nmc in 1:2000){
actual_nums <- sample(1:length(actor_seq))
for(i in 1:n_actors){
if(trial_best(i)>round(0.5*n_actors)){
list_trial<-append(list_trial,0)
break
}
if(i==n_actors){
list_trial<-append(list_trial,1)
}
}
}
mean(list_trial)
rm(list = ls())
n_actors <- 100
actor_seq <- seq(1,n_actors,1)
trial_best <- function(i){
n<-1
choice<-i
while(actual_nums[choice]!=i){
choice<-actual_nums[choice]
n<-n+1
}
return(n-1)
}
trial_naive <- function(i){
n<-1
rand_choice <- sample(1:n_actors) ##random choice
choice<-rand_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-rand_choice[n]
}
return(n)
}
trial_dumb_sequence <- function(i){
n<-1
seq_choice <- c(seq(i,n_actors,1),seq(1,i,1)) ##sequence
choice<-seq_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-seq_choice[n]
}
return(n)
}
list_trial<-NULL
for(nmc in 1:2000){
actual_nums <- sample(1:length(actor_seq))
for(i in 1:n_actors){
if(trial_best(i)>round(0.5*n_actors)){
list_trial<-append(list_trial,0)
break
}
if(i==n_actors){
list_trial<-append(list_trial,1)
}
}
}
mean(list_trial)
rm(list = ls())
n_actors <- 1000
actor_seq <- seq(1,n_actors,1)
trial_best <- function(i){
n<-1
choice<-i
while(actual_nums[choice]!=i){
choice<-actual_nums[choice]
n<-n+1
}
return(n-1)
}
trial_naive <- function(i){
n<-1
rand_choice <- sample(1:n_actors) ##random choice
choice<-rand_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-rand_choice[n]
}
return(n)
}
trial_dumb_sequence <- function(i){
n<-1
seq_choice <- c(seq(i,n_actors,1),seq(1,i,1)) ##sequence
choice<-seq_choice[n]
while(actual_nums[choice]!=i){
n<-n+1
choice<-seq_choice[n]
}
return(n)
}
list_trial<-NULL
for(nmc in 1:2000){
actual_nums <- sample(1:length(actor_seq))
for(i in 1:n_actors){
if(trial_best(i)>round(0.5*n_actors)){
list_trial<-append(list_trial,0)
break
}
if(i==n_actors){
list_trial<-append(list_trial,1)
}
}
}
mean(list_trial)
setwd("/Users/jameschu/Desktop/Test")
blogdown::check_site
blogdown::check_site()
file.remove(c(
"content/courses/example/_index.html"
))
blogdown::build_site(build_rmd = "newfile")
git init
blogdown::build_site(build_rmd = "newfile")
setwd("/Users/jameschu/Desktop/Test/public")
blogdown::build_site(build_rmd = "newfile")
blogdown::check_site()
setwd("/Users/jameschu/Desktop/Test")
blogdown::serve_site()
warnings()
blogdown::check_site()
blogdown::hugo_build()
blogdown::serve_site()
setwd("/Users/jameschu/Desktop/Test/public")
blogdown::serve_site()
blogdown::check_site()
options(blogdown.hugo.version = "0.69.0")
